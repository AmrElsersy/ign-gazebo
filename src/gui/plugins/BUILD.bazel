load(
    "//ign_bazel:qt.bzl",
    "qt_cc_binary",
    "qt_cc_library",
)
load(":gui_plugin.bzl", "ign_gazebo_gui_plugin")

package(default_visibility = ["//visibility:public"])

genrule(
    name = "modules_gen",
    srcs = [
        "modules/EntityContextMenu.qml",
        "modules/EntityContextMenu.qrc",
        "modules/TypeIcon.qml",
    ],
    outs = [
        "qrc_EntityContextMenu.cpp",
    ],
    cmd = "cd ign_gazebo/src/gui/plugins/modules && qtchooser -qt=5 -run-tool=rcc --name EntityContextMenu EntityContextMenu.qrc -o qrc_EntityContextMenu.cpp && cp qrc_EntityContextMenu.cpp ../../../../../$(OUTS)",
)

qt_cc_binary(
    name = "IgnGazebo/libEntityContextMenu.so",
    srcs = [
        "modules/EntityContextMenu.cc",
        "qrc_EntityContextMenu.cpp",
    ],
    hdrs = ["modules/EntityContextMenu.hh"],
    includes = ["."],
    linkopts = [],
    linkshared = True,
    deps = [
        "//ign_common",
        "//ign_common/av",
        "//ign_common/events",
        "//ign_common/graphics",
        "//ign_common/profiler",
        "//ign_gazebo",
        "//ign_gui",
        "//ign_msgs",
        "//ign_rendering",
        "//ign_rendering/ogre2",
        "//ign_transport",
        "//sdformat",
        "@qt//:qt_core",
        "@qt//:qt_gui",
        "@qt//:qt_network",
        "@qt//:qt_opengl",
        "@qt//:qt_qml",
        "@qt//:qt_quick",
        "@qt//:qt_quick_control",
        "@qt//:qt_widgets",
    ],
)

genrule(
    name = "module_copy",
    srcs = ["modules/qmldir"],
    outs = ["IgnGazebo/qmldir"],
    cmd = "cp $< $@",
    output_to_bindir = True,
)

genrule(
    name = "scene3d_gen",
    srcs = [
        "scene3d/GzScene3D.qml",
        "scene3d/GzScene3D.qrc",
    ],
    outs = [
        "qrc_GzScene3D.cpp",
    ],
    cmd = "cd ign_gazebo/src/gui/plugins/scene3d && qtchooser -qt=5 -run-tool=rcc --name GzScene3D GzScene3D.qrc -o qrc_GzScene3D.cpp && cp qrc_GzScene3D.cpp ../../../../../$(OUTS)",
)

ign_gazebo_gui_plugin(
    name = "ComponentInspector",
    srcs = ["component_inspector/ComponentInspector.cc"],
    hdrs = ["component_inspector/ComponentInspector.hh"],
    dirname = "component_inspector",
    resources = [
        "component_inspector/ComponentInspector.qrc",
        "component_inspector/plottable_icon.svg",
    ] + glob([
        "component_inspector/*.qml",
    ]),
    deps = [],
)

ign_gazebo_gui_plugin(
    name = "EntityTree",
    srcs = ["entity_tree/EntityTree.cc"],
    hdrs = ["entity_tree/EntityTree.hh"],
    dirname = "entity_tree",
    resources = [
        "entity_tree/EntityTree.qrc",
    ] + glob([
        "entity_tree/EntityTree.qml",
    ]),
    deps = [],
)

ign_gazebo_gui_plugin(
    name = "TransformControl",
    srcs = ["transform_control/TransformControl.cc"],
    hdrs = ["transform_control/TransformControl.hh"],
    dirname = "transform_control",
    resources = [
        "transform_control/TransformControl.qrc",
        "transform_control/TransformControl.qml",
    ] + glob(["transform_control/*.png"]),
    deps = [],
)

qt_cc_binary(
    name = "libGzScene3D.so",
    srcs = [
        "qrc_GzScene3D.cpp",
        "scene3d/Scene3D.cc",
    ],
    hdrs = [
        "scene3d/Scene3D.hh",
    ],
    data = ["IgnGazebo/qmldir"],
    includes = ["."],
    linkopts = ["-ltinyxml2"],
    linkshared = True,
    deps = [
        "//ign_common",
        "//ign_common/av",
        "//ign_common/events",
        "//ign_common/graphics",
        "//ign_common/profiler",
        "//ign_gazebo",
        "//ign_gazebo:ign_gazebo_gui",
        "//ign_gui",
        "//ign_msgs",
        "//ign_rendering",
        "//ign_rendering/ogre2",
        "//ign_transport",
        "//sdformat",
        "@qt//:qt_core",
        "@qt//:qt_gui",
        "@qt//:qt_network",
        "@qt//:qt_opengl",
        "@qt//:qt_qml",
        "@qt//:qt_quick",
        "@qt//:qt_quick_control",
        "@qt//:qt_widgets",
    ],
)
